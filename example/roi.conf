#
# Licence: GPL
# Created: Thu, 21 Jan 2016 10:48:44 +0100
# Main authors:
#     - hoel <hvasseur@openwide.fr>
#
# this is the configuration file of OpenVivoe
# this is where you will initialize some parameter for the MIB group deviceInfo
# and where you will configure OpenVivoe's sources and receivers
# [GroupName]
# All the groups:
#	_ deviceInfo
#	_ source_x
# 	_ receiver_y
#
# Then you should set the value of all parameters you want ot initialize in the MIB as:
# 	parameter=value
# You should respedt the type of each variable as defined in the MIB: Integer, String on
# 16, 32, 64 bits or less.
# IpAddresses will be assigned with strings: An example would be:
#	ethernetIfIpAddress="127.0.0.1" or ethernetIfIpAddress=127.0.0.1
#Optional parameter are commented, if you wan to initialize them, just uncomment the line
#Line which are not commented, are mandatory, they have to be initialized.
#Fot the parameters contained in table, the value for each line should be initialized, separated by ";"
#Also, about the synthax:
#space before and after "=" signs are ignored
#blank line between two keys are ignored

# This group assigned the values to the MIB's parameters of the deviceInfo section

[deviceInfo]

# This is optional
deviceDesc=This is a Desc

# This is optional
deviceManufacturer=Company's name

# This is optional
devicePartNumber=Part Number here

# This is optional
deviceSerialNumber=Serial Number here

# This is optional
deviceHardwareVersion=HW V here

# This is optional
deviceSoftwareVersion=SW V here

# This is optional
deviceFirmwareVersion=FW V here

# This is optional
deviceMibVersion=MIB V here

# This is mandatory
deviceType=3

# This is optional
deviceUserDesc=This is a User Desc

# This is mandatory
# Put the name of network interfaces you want VIVOE to use
# You can use several ethernet Interfaces, however, only one can handle
# The SNMP requests and manage the MIB. This will be the "primary" interface. Others will be "secondaries" interfaces.
# List all the interfaces below, the first one will be the Primary interface, others will be secondaries.
ethernetInterface=enp2s0

# This is mandatory
# define here what IP assignement scheme you want OpenVivoe to use
# by default it will be using the system network configuration, DHCP or other mechanism
# otherwise it will use its own IP assignment scheme as described in the MIB
ethernetIpAssignment=default
#ethernetIpAssignment=VIVOE
# This is optional
# It is used to store the value of the IP set by the manager
# You can set it if you want to change the IP of the device, but this is really dangerous
# You should put that in the form assignedIP_ifname where ifname is the name of one of the interfaces you
# entered in ethernetInterface list.
#assignedIP_enp2s0=192.168.204.254

# This is optional
deviceNatoStockNumber=deviceNatoNumber

# This is mandatory
deviceMode=2
# This is mandatory
deviceReset=1

# Here follows the defintion of Service Providers (sources) and Service Users (receivers) with an ROI support for sclable or non-scalable ROI. To add a such support to a 
# source or a receiver you will need to add two Gstreamer's new element to your pipeline: vivoecrop and vivoecaps. To support only non-scalable ROI you will and the plug-in vivoecrop
# to the source's pipeline. To support both scalable and non-scalable ROI you will add vivoecrop and vivoecaps plugins. Between those two plugin you need to add and link a sclaing plugin.
# The default scaling plugin for Gstreamer is videoscale. 

# This shows the creation of a Service User with no the support of scalable ROI.
[receiver_1]
#this is optional
defaultReceiveIP=239.192.4.119
# This is mandatory
gst_sink=videoconvert ! autovideosink

# This shows the creation of a Service User with the support of scalable ROI. Notice that the description of the video is performed before the ROI handling.
[receiver_1]
#this is optional
defaultReceiveIP=239.192.5.119
# This is mandatory
gst_sink=avdec_mpeg4 ! vivoecrop ! videoscale ! vivoecaps ! videoconvert ! autovideosink

# This shows the creation of a Service User with the support of non-scalable ROI. Notice that the description of the video is performed before the ROI handling.
[receiver_3]
#this is optional
defaultReceiveIP=239.192.6.119
# This is mandatory
gst_sink=openjpegdec ! vivoecrop ! videoconvert ! autovideosink


# The following groups define the parameter associated to a videoFormat
# The following groups should be named as follows [source_num] where "num" is a the videoFormatNumber to use
[source_1]
channelUserDesc=RAW video with scalable ROI
# This gives an example of how ROI work on a RAW video. This create a RAW video source, which is a scalable ROI
gst_source=v4l2src device=/dev/video0 ! capsfilter caps="video/x-raw,format=I420,width=640,height=480,interlace-mode=(string)progressive,framerate=(fraction)20/1" ! vivoecrop ! videoscale ! vivoecaps

[source_2]
channelUserDesc=MPEG-4 video with scalable ROI
# This gives an example of how ROI work on a MPEG-4 video. This create a MPEG-4 video source, which is a scalable ROI. You can notice that the MPEG-4 encryption is performed after
# cropping and scaling the video.
gst_source=v4l2src device=/dev/video0 ! capsfilter caps="video/x-raw,format=I420,width=640,height=480,interlace-mode=(string)progressive,framerate=(fraction)20/1" ! vivoecrop ! videoscale ! vivoecaps ! avenc_mpeg4


[source_3]
channelUserDesc=MPEG-4 video with non-scalable ROI
# This gives an example of how ROI work on a MPEG-4 video. This create a J2K video source, which is a non-scalable ROI. You can notice that the J2K encryption is performed after
# cropping and scaling the video.
gst_source=v4l2src device=/dev/video0 ! capsfilter caps="video/x-raw,format=I420,width=640,height=480,interlace-mode=(string)progressive,framerate=(fraction)20/1" ! vivoecrop ! openjpegenc 

